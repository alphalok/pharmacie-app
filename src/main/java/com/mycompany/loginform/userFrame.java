/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.loginform;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.TableView;


public class userFrame extends javax.swing.JFrame {
    
    
    private User user;
    private ArrayList<Medicament> medicaments;
    private ArrayList<Medicament> snapshot;
    private Connection connection;
    
    
    
    public userFrame(User u) {
        user=u;
        initComponents();
        aficherTabel();
        connection=MyConnection.getConnection();
    }

    public userFrame() {        
        initComponents(); 
        aficherTabel();
        connection=MyConnection.getConnection();
        
    }
    
    public void aficherTabel(){
        
        DefaultTableModel tblModel = (DefaultTableModel) MedicTable.getModel();
        
        try {
            snapshot=MyConnection.databaseSnapshot();
            for(Medicament medicament:snapshot){
                String data []= {medicament.getName(),String.valueOf(medicament.getQuantite()),String.valueOf(medicament.getPrix())};
                tblModel.addRow(data);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Un probleme a survenu");
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MedicTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        medicNameField = new javax.swing.JTextField();
        QuantiteFiled = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        acheterBtn = new javax.swing.JButton();
        panierBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        MedicTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicament", "Quantité", "Prix"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MedicTable.setAlignmentY(1.0F);
        MedicTable.setRowHeight(40);
        MedicTable.setRowMargin(5);
        MedicTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(MedicTable);
        if (MedicTable.getColumnModel().getColumnCount() > 0) {
            MedicTable.getColumnModel().getColumn(0).setResizable(false);
            MedicTable.getColumnModel().getColumn(1).setResizable(false);
            MedicTable.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 800, 660));

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1260, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1260, 60));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        medicNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                medicNameFieldFocusGained(evt);
            }
        });
        medicNameField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                medicNameFieldInputMethodTextChanged(evt);
            }
        });
        medicNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicNameFieldActionPerformed(evt);
            }
        });

        QuantiteFiled.setText("1");
        QuantiteFiled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuantiteFiledActionPerformed(evt);
            }
        });

        jLabel1.setText("Medicament name :");

        jLabel2.setText("Quantité :");

        acheterBtn.setBackground(new java.awt.Color(204, 204, 255));
        acheterBtn.setText("Acheter");
        acheterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acheterBtnActionPerformed(evt);
            }
        });

        panierBtn.setBackground(new java.awt.Color(102, 255, 0));
        panierBtn.setText("Panier");
        panierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panierBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(medicNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuantiteFiled, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(acheterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(panierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medicNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuantiteFiled, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(55, 55, 55)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acheterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(319, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 450, 650));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void acheterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acheterBtnActionPerformed
        String medicName = medicNameField.getText();
        int quantite = Integer.parseInt(QuantiteFiled.getText());
        
        
        Medicament medicamentacheter=Medicament.getMedicamentFromData(snapshot, medicName);
        
        if(medicamentacheter!=null){
            
            if(quantite<=medicamentacheter.getQuantite()){
                
                
                    
                    snapshot=Medicament.updateQuantite(snapshot, medicName, quantite);
                    user.ajouterMedicamentAuPanier(medicamentacheter);
    
                    
                    JOptionPane.showMessageDialog(null, user.getPanier().get(0).getQuantite()+"existe");
                    
                    medicNameField.setText("");
                }
                else{
                    JOptionPane.showMessageDialog(null, "la quantité n'est pas suffisante");

                }
            
            
        }
        
        
        
        
        
        
        /*
        
        DefaultTableModel tblModel = (DefaultTableModel) MedicTable.getModel();
        
        tblModel.setRowCount(0);
        Medicament medicament = new Medicament();
        medicament.setName(medicName);
        medicament=medicament.getMedicamentFromData(snapshot);
        
        if(medicament!=null){
 
            String data []= {medicament.getName(),String.valueOf(medicament.getQuantite()),String.valueOf(medicament.getPrix())};
            tblModel.addRow(data);
            
            if(quantite<=medicament.getQuantite()){
                    
                    user.ajouterMedicamentAuPanier(medicament);
                    
                    medicament.setQuantite(medicament.getQuantite()-quantite);
    
                    
                    JOptionPane.showMessageDialog(null, user.getPanier().get(0).getQuantite()+"existe");
                    
                    medicNameField.setText("");
                }
                else{
                    JOptionPane.showMessageDialog(null, "la quantité n'est pas suffisante");

                }
        
            
            
            
        }
        */
        
        
        
        
        
        
    }//GEN-LAST:event_acheterBtnActionPerformed

    private void medicNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medicNameFieldActionPerformed

    private void QuantiteFiledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuantiteFiledActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QuantiteFiledActionPerformed

    private void medicNameFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_medicNameFieldInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_medicNameFieldInputMethodTextChanged

    private void medicNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medicNameFieldFocusGained
       
        medicNameField.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateTabel();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateTabel();
                
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateTabel();
                
                
           }
            
            
            public void updateTabel(){
                String medicName = medicNameField.getText();
                int quantite = Integer.parseInt(QuantiteFiled.getText());
        
        
                DefaultTableModel tblModel = (DefaultTableModel) MedicTable.getModel();

                tblModel.setRowCount(0);
                
                medicaments=MyConnection.searchInData(medicName,snapshot);

                for(Medicament medicament:medicaments){
                String data []= {medicament.getName(),String.valueOf(medicament.getQuantite()),String.valueOf(medicament.getPrix())};
                tblModel.addRow(data);
            }

            }
            
            
            
        });
        
    }//GEN-LAST:event_medicNameFieldFocusGained

    private void panierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panierBtnActionPerformed
        panierFrame frame = new panierFrame(user);
        frame.setVisible(true);
    }//GEN-LAST:event_panierBtnActionPerformed

    private void MedicTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicTableMouseClicked
        String medicamentName=MedicTable.getModel().getValueAt(MedicTable.getSelectedRow(), 0).toString();
        medicNameField.setText(medicamentName);
    }//GEN-LAST:event_MedicTableMouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userFrame().setVisible(true);
            }
        });
    
        
         
        
    
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MedicTable;
    private javax.swing.JTextField QuantiteFiled;
    private javax.swing.JButton acheterBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField medicNameField;
    private javax.swing.JButton panierBtn;
    // End of variables declaration//GEN-END:variables
}
